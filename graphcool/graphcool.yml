# Welcome to Graphcool!
#
# This file is the main config file for your Graphcool Service.
# It's very minimal at this point and uses default values.
# We've included a hello world function here.
# Just run `graphcool deploy` to have the first running Graphcool Service.
#
# Check out some examples:
#    https://github.com/graphcool/framework/tree/master/examples
#
# Here are the reference docs of this definition format:
# https://www.graph.cool/docs/reference/service-definition/graphcool.yml-foatho8aip
#
# Happy Coding!


# In the types.graphql you define your data schema
types: ./types.graphql


functions:
  facebookAuthentication:
    handler:
      code:
        src: ./src/facebook/facebookAuthentication.ts
    type: resolver
    schema: ./src/facebook/facebookAuthentication.graphql
  loggedInUser:
    handler:
      code:
        src: ./src/facebook/loggedInUser.ts
    type: resolver
    schema: ./src/facebook/loggedInUser.graphql
  addPostView:
    handler:
      code:
        src: ./src/functions/addPostView.js
    type: resolver
    schema: ./src/functions/addPostView.graphql
  signedUrl:
    handler:
      code:
        src: ./src/functions/signedUrl.js
    type: resolver
    schema: ./src/functions/signedUrl.graphql
  addNotification:
    handler:
      code:
        src: ./src/functions/addNotification.js
    type: subscription
    query: ./src/functions/createComment.graphql
  addSubCommentNotification:
    handler:
      code:
        src: ./src/functions/addSubCommentNotification.js
    type: subscription
    query: ./src/functions/createSubComment.graphql


# Model/Relation permissions are used to limit the API access
# To take the burden of thinking about those while development, we
# preconfigured the wildcard ("*") permission that allows everything
# Read more here:
# https://www.graph.cool/docs/reference/auth/authorization/overview-iegoo0heez
permissions:
  - operation: Post.read

  - operation: Post.read
    authenticated: true
    query: src/permissions/Post.graphql
    fields:
      - views

  - operation: Post.create
    authenticated: true

  - operation: PostsByUser.connect
    authenticated: true

  - operation: Post.update
    authenticated: true
    query: src/permissions/Post.graphql

  - operation: Post.update
    authenticated: true
    fields:
      - comments

  - operation: Post.delete
    authenticated: true
    query: src/permissions/Post.graphql

  - operation: User.read
    fields:
      - posts
      - id
      - username
      - description
      - facebookUserId

  - operation: User.update
    authenticated: true
    query: src/permissions/User.graphql:UpdateUserData
    fields:
      - email
      - posts
      - username
      - description
      - following
      - comments
      - subcomments

  - operation: FollowedByUser.connect
    authenticated: true

  - operation: FollowedByUser.disconnect
    authenticated: true

  - operation: User.update
    authenticated: true
    query: src/permissions/User.graphql:UpdateUserRole
    fields:
      - role

  - operation: User.delete
    authenticated: true
    query: src/permissions/User.graphql:DeleteUser

  - operation: Comment.create
    authenticated: true

  - operation: Comment.read

  - operation: Comment.update
    authenticated: true

  - operation: SubComment.create
    authenticated: true

  - operation: SubComment.read
    authenticated: true

  - operation: SubCommentsByUser.connect
    authenticated: true

  - operation: CommentToReplies.connect
    authenticated: true

  - operation: CommentsByUser.connect
    authenticated: true

  - operation: PostToComments.connect
    authenticated: true

  - operation: Notification.read
    authenticated: true
    query: src/permissions/User.graphql:UpdateUserData

  - operation: Notification.update
    authenticated: true

# Your root tokens used for functions to get full access to the API
# Read more here:
# https://www.graph.cool/docs/reference/auth/authentication/authentication-tokens-eip7ahqu5o
# rootTokens:
#   - mytoken

